/**
 * Абстрактный класс драйвера Modbus. Определяет базовые методы, необходимые для приема и передачи фреймов по протоколу Modbus.
 */
class Modbus
{
    /**
     * Поток для приема/передачи данных
     */
    Stream s;
    
    
    /**
     * Создает абстрактный класс Modbus
     *
     * @param s поток ввода/вывода
     */
    constructor(Stream s)
    {
	this.s=s;
    }
    
    
    /**
     * <b>Абстрактный !</b> Передать фрейм. Фрейм должен содержать только адрес, команду и данные (без заголовка и контрольной суммы).
     *
     * @param data данные для передачи
     */
    void send(byte[] data)
    {
    }
    
    
    /**
     * <b>Абстрактный !</b> Принять фрейм. Фрейм будет содержать только адрес, команду и данные.
     *
     * @param timeout время для приема фрейма
     * @return принятые данные, или null в случае таймаута приема
     */
    byte[] receive(int timeout)
    {
    }
    
    
    /**
     * Опустошить входной буфер
     */
    void clearInput()
    {
	byte[] buf=new byte[32];
	while (s.readBytes(buf, 0, buf.length) > 0);
    }
}
