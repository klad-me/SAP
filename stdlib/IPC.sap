/**
 * Предоставляет возможности межпроцессного(межнитевого) взаимодействия.
 *
 * Предоставляет возможности межпроцессного(межнитевого) взаимодействия.<br/>
 * В языке SAP каждый объект может быть заблокирован какой-либо нитью сколько угодно раз.
 * При этом другие нити не смогут заблокировать этот объект, или будут приостановлены до разблокировки.<br/>
 * Заблокировать объект можно двумя способами: автоматическим и ручным.<br/>
 * Автоматическая блокировка выглядит следующим образом:<br/>
 * Object o;<br/>
 * synchronized(o) &lt;оператор&gt;<br/>
 * При этом, перед выполнением оператора будет включена блокировка объекта "o", а после выполения - разблокировка.<br/>
 * Ручная блокировка выглядит следующим образом:<br/>
 * Object o;<br/>
 * IPC.lock(o);<br/>
 * &lt;оператор&gt;<br/>
 * IPC.unlock(o);<br/>
 * В данном примере используются отдельные методы для блокировки и разблокировки.
 * Следует также заметить, что существует метод для проверки статуса блокировки: IPC.tryLock().<br/>
 * Одна нить может блокировать один и тот же объект сколько угодно раз (вложенная блокировка), при этом, количество раблокирований
 * должно точно сходиться с количеством блокирований, иначе Ваша программа будет нестабильна.
 */
class IPC
{
    /**
     * Попытаться заблокировать объект.
     *
     * @param o объект для блокировки
     * @return true, если объект успешно заблокировался, или false - в случае, если объект уже заблокирован другой нитью
     */
    native static boolean tryLock(Object o);
    
    
    /**
     * Заблокировать объект.
     *
     * Заблокировать объект. Если объект уже заблокирован другой нитью, вызывающая нить приостановится до разблокировки.
     *
     * @param o объект для блокировки
     */
    native static void lock(Object o);
    
    
    /**
     * Разблокировать объект.
     *
     * Разблокировать объект заблокированный вызовом IPC.lock().<br/>
     * Внимание ! Вызов IPC.lock() и IPC.unlock() для одного объекта из разных нитей преведет ошибке виртуальной машины !
     *
     * @param o объект для разблокировки
     */
    native static void unlock(Object o);
}
