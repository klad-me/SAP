/**
 * Предоставляет возможность последовательного составления строки.
 */
class StringBuffer
{
    /**private**/
    byte[] data;
    
    /**private**/
    int length;
    
    
    /**
     * Создает пустой строковый буфер
     */
    native constructor();
    
    
    /**
     * Добавить символ в строковый буфер
     *
     * @param c символ для добавления
     */
    native void appendChar(byte c);
    
    
    /**
     * Добавить строку в строковый буфер
     *
     * @param s строка для добавления
     */
    native void appendString(String s);
    
    
    /**
     * Вставить символ в строковый буфер в определенную позицию (со сдвигом содержимого)
     *
     * Вставить символ в строковый буфер в определенную позицию (со сдвигом содержимого).<br/>
     * Например:<br/>
     * StringBuffer s=new StringBuffer();<br/>
     * s.appendString("Пивет");<br/>
     * s.insertChar('р', 1);<br/>
     * В результате получится строка "Привет".
     *
     * @param c символ для вставки
     * @param at позиция, в которую необходимо вставить символ
     */
    native void insertChar(byte c, int at);
    
    
    /**
     * Вставить строку в строковый буфер в определенную позицию (со сдвигом содержимого)
     *
     * Вставить строку в строковый буфер в определенную позицию (со сдвигом содержимого).<br/>
     * Например:<br/>
     * StringBuffer s=new StringBuffer();<br/>
     * s.appendString("Я помню мгновенье");<br/>
     * s.insertString("чудное ", 8);<br/>
     * В результате получится строка "Я помню чудное мгновенье".
     *
     * @param s строка для вставки
     * @param at позиция, в которую необходимо вставить строку
     */
    native void insertString(String s, int at);
    
    
    /**
     * Получить результирующую строку
     *
     * @return результирующая строка
     */
    native String toString();
    
    
    /**
     * Получить размер полученной строки
     *
     * @return размер полученной строки
     */
    native int length();
}
