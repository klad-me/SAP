/**
 * Предоставляет доступ к некоторым основным математическим функциям
 */
class Math
{
    /**
     * Значение числа "E" - 2.718281
     */
    static final float E = 2.718281;
    
    /**
     * Значение числа "Пи" - 3.141592
     */
    static final float PI = 3.141592;
    
    
    /**
     * Получить модуль целого числа
     *
     * @param x входное значение
     * @return модуль входного числа
     */
    native static int abs(int x);
    
    
    /**
     * Получить модуль вещественного числа
     *
     * @param x входное значение
     * @return модуль входного числа
     */
    native static float fabs(float x);
    
    
    /**
     * Возвращает наименьшее целое значение, но не менее входного числа
     *
     * @param x входное значение
     * @return наименьшее целое значение, но не менее входного числа
     */
    native static float ceil(float x);
    
    
    /**
     * Возвращает наибольшее целое значение, но не больше входного числа
     *
     * @param x входное значение
     * @return наибольшее челое значение, но не больше входного числа
     */
    native static float floor(float x);
    
    
    /**
     * Возвращает значение синуса для заданного угла
     *
     * @param x заданный угол в радианах
     * @return значение sin(x) от -1.0 до 1.0
     */
    native static float sin(float x);
    
    
    /**
     * Возвращает значение косинуса для заданного угла
     *
     * @param x заданный угол в радианах
     * @return значение cos(x) от -1.0 до 1.0
     */
    native static float cos(float x);
    
    
    /**
     * Возвращает значение тангенса для заданного угла
     *
     * @param x заданный угол в радианах
     * @return значение tg(x)
     */
    native static float tan(float x);
    
    
    /**
     * Возвращает минимальное из двух заданных целых чисел
     *
     * @param x число 1
     * @param y число 2
     * @return минимальное из двух чисел
     */
    native static int min(int x, int y);
    
    
    /**
     * Возвращает минимальное из двух заданных вещественных чисел
     *
     * @param x число 1
     * @param y число 2
     * @return минимальное из двух чисел
     */
    native static float fmin(float x, float y);
    
    
    /**
     * Возвращает максимальное из двух заданных целых чисел
     *
     * @param x число 1
     * @param y число 2
     * @return минимальное из двух чисел
     */
    native static int max(int x, int y);
    
    
    /**
     * Возвращает максимальное из двух заданных вещественных чисел
     *
     * @param x число 1
     * @param y число 2
     * @return минимальное из двух чисел
     */
    native static float fmax(float x, float y);
    
    
    /**
     * Возвращает квадратный корень из заданного числа
     *
     * @param x входное значение
     * @return квадратный корень из заданного числа
     */
    native static float sqrt(float x);
}
